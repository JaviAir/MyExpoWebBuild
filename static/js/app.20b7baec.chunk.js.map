{"version":3,"sources":["App.tsx","index.js"],"names":["SettingsScreen","navigation","View","style","flex","alignItems","justifyContent","Text","Button","title","onPress","navigate","ProfileScreen","HomeScreen","Link","to","styles","linkStyle","DetailsScreen","push","Tab","createBottomTabNavigator","SettingsStack","createStackNavigator","HomeStack","StyleSheet","create","textDecorationLine","backgroundColor","color","paddingTop","marginVertical","height","registerRootComponent","myoptions","headerShown","Platform","OS","NavigationContainer","linking","prefixes","fallback","Navigator","Screen","name","component","options"],"mappings":"gOAQA,SAASA,EAAT,GAAyC,IAAfC,EAAc,EAAdA,WACxB,OACE,gBAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,KAAM,EAAGC,WAAY,SAAUC,eAAgB,WAC5D,gBAACC,EAAA,EAAD,wBACA,gBAACC,EAAA,EAAD,CACEC,MAAM,gBACNC,QAAS,kBAAMT,EAAWU,SAAS,eAM3C,SAASC,EAAT,GAAwC,IAAfX,EAAc,EAAdA,WAEvB,OACE,gBAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,KAAM,EAAGC,WAAY,SAAUC,eAAgB,WAC5D,gBAACC,EAAA,EAAD,uBACA,gBAACC,EAAA,EAAD,CACEC,MAAM,iBACNC,QAAS,kBAAMT,EAAWU,SAAS,gBAM3C,SAASE,EAAT,GAAqC,IAAfZ,EAAc,EAAdA,WACpB,OACE,gBAACC,EAAA,EAAD,CAAMC,MAAO,CAAEE,WAAY,SAAUC,eAAgB,WACnD,gBAACC,EAAA,EAAD,oBACA,gBAACC,EAAA,EAAD,CACEC,MAAM,gBACNC,QAAS,kBAAMT,EAAWU,SAAS,cAErC,gBAACG,EAAA,EAAD,CAAMC,GAAG,iBAAiBZ,MAAOa,EAAOC,WAAxC,yBAKN,SAASC,EAAT,GAAwC,IAAfjB,EAAc,EAAdA,WACvB,OACE,gBAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,KAAM,EAAGC,WAAY,SAAUC,eAAgB,WAC5D,gBAACC,EAAA,EAAD,uBACA,gBAACC,EAAA,EAAD,CACEC,MAAM,yBACNC,QAAS,kBAAMT,EAAWkB,KAAK,eAKvC,IAAMC,EAAMC,cACNC,EAAgBC,cAChBC,EAAYD,cAsDlB,IAAMP,EAASS,IAAWC,OAAO,CAC/BT,UAAW,CACTU,mBAAoB,YACpBC,gBAAiB,OACjBC,MAAO,UACPC,WAAY,GACZC,eAAgB,GAChBC,OAAQ,OCjHZC,aDwDe,WACb,IAIIC,EAAY,CAACC,aAAa,GAI9B,MAHoB,QAAhBC,IAASC,KACXH,EAAY,CAACC,aAAa,IAG1B,gBAACG,EAAA,EAAD,CAAqBC,QATP,CACdC,SAAU,CAAC,MAQ4BC,SAAU,gBAAClC,EAAA,EAAD,oBAC/C,gBAACa,EAAIsB,UAAL,KACE,gBAACtB,EAAIuB,OAAL,CAAYC,KAAK,UACd,kBAEC,gBAACtB,EAAcoB,UAAf,KACE,gBAACpB,EAAcqB,OAAf,CACEC,KAAK,WACLC,UAAW7C,EACX8C,QAASZ,IAEX,gBAACZ,EAAcqB,OAAf,CAAsBC,KAAK,UAAUC,UAAWjC,QAItD,gBAACQ,EAAIuB,OAAL,CAAYC,KAAK,WACd,kBACC,gBAACpB,EAAUkB,UAAX,KACE,gBAAClB,EAAUmB,OAAX,CAAkBC,KAAK,OAAOC,UAAWhC,IACzC,gBAACW,EAAUmB,OAAX,CAAkBC,KAAK,UAAUC,UAAW3B,e","file":"static/js/app.20b7baec.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Button, View, Text, Platform, StyleSheet } from 'react-native';\nimport {\n  NavigationContainer, Link\n} from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\nfunction SettingsScreen({ navigation }) {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text>Settings Screen</Text>\n      <Button\n        title=\"Go to Profile\"\n        onPress={() => navigation.navigate('Profile')}\n      />\n    </View>\n  );\n}\n\nfunction ProfileScreen({ navigation }) {\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text>Profile Screen</Text>\n      <Button\n        title=\"Go to Settings\"\n        onPress={() => navigation.navigate('Settings')}\n      />\n    </View>\n  );\n}\n\nfunction HomeScreen({ navigation }) {\n  return (\n    <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n      <Text>Home Screen</Text>\n      <Button\n        title=\"Go to Details\"\n        onPress={() => navigation.navigate('Details')}\n      />\n      <Link to=\"/First/Profile\" style={styles.linkStyle}>Go to Jane's profile</Link>\n    </View>\n  );\n}\n\nfunction DetailsScreen({ navigation }) {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text>Details Screen</Text>\n      <Button\n        title=\"Go to Details... again\"\n        onPress={() => navigation.push('Details')}\n      />\n    </View>\n  );\n}\nconst Tab = createBottomTabNavigator();\nconst SettingsStack = createStackNavigator();\nconst HomeStack = createStackNavigator();\n\n// const prefix = Linking.createURL('/');\n\nexport default function App() {\n  const linking = {\n    prefixes: ['/'],\n  };\n\n  let myoptions = {headerShown: true }\n  if (Platform.OS === 'web') {\n    myoptions = {headerShown: false }\n  }\n  return (\n    <NavigationContainer linking={linking} fallback={<Text>Loading...</Text>}>\n      <Tab.Navigator>\n        <Tab.Screen name=\"First\">\n          {() => (\n\n            <SettingsStack.Navigator >\n              <SettingsStack.Screen\n                name=\"Settings\"\n                component={SettingsScreen}\n                options={myoptions}\n              />\n              <SettingsStack.Screen name=\"Profile\" component={ProfileScreen} />\n            </SettingsStack.Navigator>\n          )}\n        </Tab.Screen>\n        <Tab.Screen name=\"Second\">\n          {() => (\n            <HomeStack.Navigator>\n              <HomeStack.Screen name=\"Home\" component={HomeScreen} />\n              <HomeStack.Screen name=\"Details\" component={DetailsScreen} />\n            </HomeStack.Navigator>\n          )}\n        </Tab.Screen>\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n\n\n// import React from 'react';\n// import { StyleSheet, Text, View } from 'react-native';\n\n// export default function App() {\n//   return (\n//     <View style={styles.container}>\n//       <Text>Open up App.tsx to start working on your app!</Text>\n//     </View>\n//   );\n// }\n\nconst styles = StyleSheet.create({\n  linkStyle: {\n    textDecorationLine: 'underline',\n    backgroundColor: '#fff',\n    color: '#001aff',\n    paddingTop: 40,\n    marginVertical: 10,\n    height: 100,\n  },\n});\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}